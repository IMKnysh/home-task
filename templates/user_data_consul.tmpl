#!/usr/bin/env bash

yum update -y
yum install -y docker


usermod -a -G docker ec2-user
service docker start
mkdir -p /opt/consul/config
mkdir -p /opt/consul/tls/certs
mkdir -p /opt/consul/tls/private

inst_IP=`curl --silent --show-error --location http://169.254.169.254/latest/meta-data/local-ipv4/`

#################Configuring IPTABLES###################
iptables -t nat -A PREROUTING -p udp -m udp --dport 53 -j REDIRECT --to-ports 8600
iptables -t nat -A PREROUTING -p tcp -m tcp --dport 53 -j REDIRECT --to-ports 8600
iptables -t nat -A OUTPUT -d localhost -p udp -m udp --dport 53 -j REDIRECT --to-ports 8600
iptables -t nat -A OUTPUT -d localhost -p tcp -m tcp --dport 53 -j REDIRECT --to-ports 8600

################# Configuring DNS resolver##############
dns_server=$(cat /etc/resolv.conf |grep -i -m 1 '^nameserver'|cut -d ' ' -f2)
cat <<EOF > /etc/resolv.conf
search ec2.internal
options timeout:2 attempts:5
nameserver $inst_IP
nameserver $dns_server
EOF

#################Configuring Consul#####################
cat <<EOF > /opt/consul/config/server.json
{
  "datacenter": "${var.region}",
  "data_dir": "/consul/data/",
  "log_level": "INFO",
  "server": true,
  "encrypt": "${var.consul_encrypt}",
  "bootstrap_expect": ${var.count_srv},
  "skip_leave_on_interrupt": true,
  "ui": true,
  "recursors" : [ "$dns_server" ],
  "ports": {
    "https": 8501
  },
  "key_file": "/consul/tls/private/my.key",
  "cert_file": "/consul/tls/certs/server.crt",
  "ca_file": "/consul/tls/certs/ca-bundle.crt",
  "verify_incoming": true,
  "verify_outgoing": true
}
EOF

cat <<EOF > /opt/consul/config/acl.json
{
  "acl_datacenter": "${var.region}",
  "acl_master_token": "${var.consul_acl_master_token}",
  "acl_default_policy": "deny",
  "acl_down_policy": "extend-cache",
  "acl_agent_token": "${var.consul_acl_agent_token}"
}
EOF
cat <<EOF > /opt/consul/agent.json
{
  "ID": "${var.consul_acl_agent_token}",
  "Name": "Agent Token",
  "Type": "client",
  "Rules": "node \"\" { policy = \"write\" } service \"\" { policy = \"read\" } "
}
EOF

echo "${var.ca_public_key}" > /opt/consul/tls/certs/ca-bundle.crt
echo "${var.public_key}" > /opt/consul/tls/certs/server.crt
echo "${var.private_key}" > /opt/consul/tls/private/my.key



docker run -d --restart always --net=host --name=consul-server -v /opt/consul:/consul consul agent -server -client='{{ GetInterfaceIP "eth0" }}' -bind='{{ GetInterfaceIP "eth0" }}' -retry-join "provider=aws tag_key=Consul tag_value=Server"

echo "Waiting consul to launch on 8500..."

while ! nc -z $inst_IP 8500; do
  sleep 10 # wait for 10 second before check again
done

curl \
    --request PUT \
    --header "X-Consul-Token: ${var.consul_acl_master_token}" \
    --data \
    '{
  "ID": "${var.consul_acl_agent_token}",
  "Name": "Agent Token",
  "Type": "client",
  "Rules": "node \"\" { policy = \"write\" } service \"\" { policy = \"read\" } "
   }' http://$inst_IP:8500/v1/acl/create

curl \
    --request PUT \
    --header "X-Consul-Token: ${var.consul_acl_master_token}" \
    --data \
    '{
  "ID": "00000000-0000-0000-0000-000000000002",
  "Name": "Anonymous Token",
  "Type": "client",
  "Rules": "service \"consul\" { policy = \"read\" } "
   }' http://$inst_IP:8500/v1/acl/update

echo "#####################################################################"
echo "Finished with Consul..."
echo "#####################################################################"